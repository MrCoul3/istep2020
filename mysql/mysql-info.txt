INSERT INTO `gender` (`id`, `russian_name`, `english_name`, `color`) VALUES ('', 'Мужской', 'Male', 'Blue'), ('', 'Женский', 'Female', 'red')

SELECT * FROM `users` WHERE 1

SELECT name, age FROM `users` WHERE age > 30  


SELECT * FROM `users` WHERE gender > 1

SELECT * FROM `users` WHERE position_id < 3
SELECT * FROM `users` WHERE position_id IN ('1', '2')

INSERT INTO `users` (`id`, `name`, `age`, `gender`, `position_id`) VALUES (NULL, 'Олег', '33', '1', '5')


изменить строку 
UPDATE `users` SET `position_id` = '4' WHERE id = 1;
UPDATE product SET price = 40 WHERE name = 'banana';

сортировка 
ORDER BY elem ASC /DESC СОРТИРУЕТ В ПРЯМОМ / ОБРАТНОМ ПО ВСЕМ ТИПАМ ДАННЫХ 
SELECT * FROM `product` ORDER BY price; отсортировать по возрастанию


DELETE FROM `bookstime` WHERE `id` IN (SELECT `idFromBookstime` FROM `bookstime-gmt`)
"UPDATE `bookstime` SET `payment` = 'payed' WHERE IN (SELECT `idFromBookstime` FROM `bookstime-gmt` )"

подзапрос
SELECT name 
FROM users 
WHERE position_id IN 
(SELECT id FROM positions WHERE salary > 50000);

регулярные выраженгия 
SELECT * FROM `product` WHERE name LIKE 'p%'; - все что начинается на букву P

количество элементов 
SELECT count(*) FROM `product`;


-----JOIN

inner join 
SELECT u.id, u.name, d.name AS d_name FROM users u INNER JOIN departmens d ON u.d_id = d.id

LEFT JOIN
SELECT u.id, u.name, d.name AS d_name FROM users u LEFT JOIN departmens d ON u.d_id = d.id
SELECT u.id, u.name, d.name AS d_name FROM users u LEFT JOIN departmens d ON u.d_id = d.id WHERE d.id IS NULL

RIGHT JOIN
SELECT u.id, u.name, d.name AS d_name FROM users u RIGHT JOIN departmens d ON u.d_id = d.id 

можно инвертировать запрос
SELECT u.id, u.name, d.name AS d_name FROM departmens d LEFT JOIN users u ON u.d_id = d.id

SELECT products.id, products.name, quantity.quantity, stores.name AS shop_name FROM products INNER JOIN quantity ON products.id = quantity.product_id INNER JOIN stores ON stores.id = quantity.store_id WHERE quantity.quantity > 0

SELECT  products.id, products.name,  sum(quantity.quantity) AS sum_quantity 
FROM products 
INNER JOIN quantity ON products.id = quantity.product_id
GROUP BY  products.id



-----------------
LIMIT 2 ограничивает количество получаемых элементов 


DISTINCT

AVG -СРЕДНЕЕ 

AS (ALIAS) ОБОЗВАТЬ КАК ХОЧЕШЬ