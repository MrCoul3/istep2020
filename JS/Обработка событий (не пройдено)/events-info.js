// ------------------БРАУЗЕРНЫЕ СОБЫТИЯ----------------------//
/* ___________________________________________________________ */
"Событие – это сигнал от браузера о том, что что-то произошло. Все DOM-узлы подают такие сигналы (хотя события бывают и не только в DOM)."

!События мыши:

[click] – происходит, когда кликнули на элемент левой кнопкой мыши
[contextmenu] – происходит, когда кликнули на элемент правой кнопкой мыши.
[mouseover] / [mouseout] – когда мышь наводится на / покидает элемент.
[mousedown] / [mouseup] – когда нажали / отжали кнопку мыши на элементе.
[mousemove] – при движении мыши.

События на элементах управления:
[submit] – пользователь отправил форму <form>.
[focus] – пользователь фокусируется на элементе, например нажимает на <input>.

Клавиатурные события:
[keydown и keyup] – когда пользователь нажимает / отпускает клавишу.
/* ___________________________________________________________ */

//------------------ Обработчики событий------------------
"[обработчик]" - функция, которая сработает, как только событие произошло.

----------Способы назначить событию обработчик:

1. Использование атрибута HTML
/* в разметке, в атрибуте, который называется*/ on<событие>.
<input value="Нажми меня" onclick="alert('Клик!')" type="button"></input>

2. Использование свойства DOM-объекта
elem.onclick = function() {}
!!!Убрать обработчик можно назначением elem.onclick = null.

3. Доступ к элементу через this - /* Внутри обработчика события this ссылается на текущий элемент, то есть на тот, на котором, как говорят, «висит» (т.е. назначен) обработчик. */
<button onclick="alert(this.innerHTML)">Нажми меня</button>

4. addEventListener - Метод назначения обработчиков 
element.addEventListener( Event, handler[, options]);
input.removeEventListener("click", handler); удалить обработчик события 
!!!позволяет добавлять несколько обработчиков на одно событие

5. Объект события - показывает "детали того, что произошло."
/* Когда происходит событие, браузер создаёт объект события, записывает в него детали и передаёт его в качестве аргумента функции-обработчику. */
btn.onclick = function(event) {
    console.log(event.type + event.currentTarget);
    console.log(event.clientX + ":" + event.clientY);
}
// #### Некоторые свойства объекта event #### :
// > [ event.type ]  -Тип события, в данном случае "click".
// > [ event.currentTarget ]  - Элемент, на котором сработал обработчик. Значение – обычно такое же, как и у this
// > [ event.clientX / event.clientY ] - Координаты курсора в момент клика относительно 
6. Объект-обработчик: "[handleEvent]". Вызывается МЕТОД ОБЪЕКТА "handleEvent".
/* Пример:
<button id="elem">Нажми меня</button>
<script>
  class Menu {
    handleEvent(event) {
      switch(event.type) {
        case 'mousedown':
          elem.innerHTML = "Нажата кнопка мыши";
          break;
        case 'mouseup':
          elem.innerHTML += "...и отжата.";
          break;
      }
    }
  }

  let menu = new Menu();
  elem.addEventListener('mousedown', menu);
  elem.addEventListener('mouseup', menu);
</script> */


!!! e.preventDefault - удалить все стандартные собыьитя 